###########################################################################
# Copyright 2018 ARICENT HOLDINGS LUXEMBOURG SARL. and
# Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###########################################################################


---
- hosts: localhost
  become: true
  vars_files:
    - "{{ PROXY_DATA_FILE }}"
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"
  tasks:
    - name: delete istio gateway
      shell: "kubectl --kubeconfig=/etc/kubectl/node-kubeconfig.yaml delete ingress gateway -n=istio-system"
      ignore_errors: True
      delegate_to: "localhost" 
    - name: check if ambassador-service.yaml exist
      delegate_to: localhost
      stat:
        path: "{{SRC_PACKAGE_PATH}}ambassador-service.yaml"
      register: st1
    - name: Copy ambassador-service.yaml
      copy:
       src: "{{SRC_PACKAGE_PATH}}ambassador-service.yaml"
       dest: "/root"
      when:  st1.stat.exists

    - name: create ambassador-service.yaml
      blockinfile:
       create: yes
       path: /root/ambassador-service.yaml
       block: |
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            service: ambassador
          name: ambassador
          annotations:
            getambassador.io/config: |
              ---
              apiVersion: ambassador/v0
              kind:  Mapping
              name:  httpbin_mapping
              prefix: /httpbin/
              service: httpbin.org:80
              host_rewrite: httpbin.org
        spec:
          type: LoadBalancer
          ports:
          - name: ambassador
            port: 80
            targetPort: 80
          selector:
            service: ambassador
      when: not st1.stat.exists
    - name: apply ambassdor yaml
      command: "kubectl --kubeconfig=/etc/kubectl/node-kubeconfig.yaml create clusterrolebinding kube-system-default-admin --clusterrole=cluster-admin --serviceaccount=default:default"
      ignore_errors: True
      delegate_to: "localhost" 
    - name: check if ambassador.yaml exist
      delegate_to: localhost
      stat:
        path: "{{SRC_PACKAGE_PATH}}ambassador.yaml"
      register: st
    - name: Copy ambassador.yaml
      copy:
       src: "{{SRC_PACKAGE_PATH}}ambassador.yaml"
       dest: "/root"
      when:  st.stat.exists
    - name: apply ambassdor yaml
      command: "kubectl --kubeconfig=/etc/kubectl/node-kubeconfig.yaml apply -f /root/ambassador.yaml"
      environment:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ https_proxy }}"
        no_proxy: "{{ no_proxy }}"
      when:  st.stat.exists
      delegate_to: "localhost" 
    - name: apply ambassdor yaml
      command: "kubectl apply --kubeconfig=/etc/kubectl/node-kubeconfig.yaml -f https://getambassador.io/yaml/ambassador/ambassador-no-rbac.yaml"
      when: not st.stat.exists
      delegate_to: "localhost" 

    - name: apply ambassdor-service.yaml
      command: "kubectl --kubeconfig=/etc/kubectl/node-kubeconfig.yaml apply -f ambassador-service.yaml"
      args:
         chdir: "/root"
      delegate_to: "localhost" 


