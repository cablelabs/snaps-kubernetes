###########################################################################
# Copyright 2017 ARICENT HOLDINGS LUXEMBOURG SARL. and
# Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###########################################################################


---

- hosts: "{{ target }}"
  become: true
  vars_files:
    - "{{ PROXY_DATA_FILE }}"
    - "{{ VARIABLE_FILE }}"
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"
  tasks:
    - name: apt-get install apt-transport-https
      apt:
        name: apt-transport-https
        state: latest

    - name: apt-get update
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: change host name to "{{host_name}}"
      command: hostname "{{host_name}}"

    - name: swapoff -a
      command: swapoff -a
 
    - name: apt-get install sshpass
      apt:
        name: sshpass
        state: latest
      #command: apt-get install sshpass

    - name: remove file /etc/hostname
      file:
        dest: /etc/hostname
        state: absent
 
    - name: create file /etc/hostname
      file:
        dest: /etc/hostname
        state: touch

    - name: edit file /etc/hostname
      lineinfile:
        dest: /etc/hostname
        line: '{{host_name}}'

    - name: remove apt.conf file
      file:
        dest: "{{ APT_CONF_DEST }}"
        state: absent 
    - name: Create file apt.conf 
      file:
        dest: "{{ APT_CONF_DEST }}"
        state: touch
    - name: edit apt.conf file
      lineinfile:
        dest: "{{ APT_CONF_DEST }}"
        line: '{{item}}'
      with_items:
        - 'Acquire::http::Proxy "{{ http_proxy }}";'
        - 'Acquire::https::Proxy "{{ https_proxy }}";'
        - 'Acquire::no::Proxy "{{ no_proxy }}";'

    - name: Install python
      apt:
        name: python
        state: latest
    - name: Install python-pip
      apt:
        name: python-pip
        state: latest
    - name: apt-get install -y ceph-common
      apt:
        name: ceph-common
        state: latest
#      command: apt-get install -y ceph-common

    - name: Install dependencies
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - build-essential
        - autoconf
        - libtool
        - pkg-config
        - python-opengl
        - python-imaging
        - python-pyrex 
        - python-pyside.qtopengl
        - idle-python2.7
        - qt4-dev-tools
        - qt4-designer
        - libqtgui4 
        - libqtcore4
        - libqt4-xml
        - libqt4-test
        - libqt4-script
        - libqt4-network
        - libqt4-dbus 
        - python-qt4
        - python-qt4-gl
        - libgle3
        - python-dev
        - libssl-dev

    - name: pip install --upgrade pip
      pip:
        name: pip
#      command: pip install --upgrade pip

    - name: pip install pyOpenSSL 
      pip:
        name: pyOpenSSL
     #   state: latest
      #command: pip install pyOpenSSL


    - name: Enable root login on all nodes
      replace:
        dest: /etc/ssh/sshd_config
        regexp: 'PermitRootLogin no'
        replace: 'PermitRootLogin yes'
        backup: yes
    
   # - name: copying docker-engine_17.03.1~ce-0~ubuntu-xenial_amd64.deb
   #   copy: src="{{SRC_PACKAGE_PATH}}../docker-engine_17.03.1~ce-0~ubuntu-xenial_amd64.deb" dest="{{APT_ARCHIVES_SRC}}" 
    - name: copying docker-ce_17.03.2~ce-0~ubuntu-xenial_amd64.deb 
      copy: src="{{SRC_PACKAGE_PATH}}../docker-ce_17.03.2~ce-0~ubuntu-xenial_amd64.deb" dest="{{APT_ARCHIVES_SRC}}" 

    #- name: dpkg -i docker-engine_17.03.1~ce-0~ubuntu-xenial_amd64.deb
    - name: dpkg -i docker-ce_17.03.2~ce-0~ubuntu-xenial_amd64.deb
      #command: dpkg -i "{{APT_ARCHIVES_SRC}}docker-engine_17.03.1~ce-0~ubuntu-xenial_amd64.deb"
      apt:
         deb: "{{APT_ARCHIVES_SRC}}docker-ce_17.03.2~ce-0~ubuntu-xenial_amd64.deb"
 
    - name: create directory "{{ HTTP_PROXY_DEST }}" 
      file:
       state: directory	
       path: "{{ HTTP_PROXY_DEST }}"
       mode: 0644
     
    - name: removing file "{{ HTTP_PROXY_DEST }}http-proxy.conf"
      file:
        dest: "{{ HTTP_PROXY_DEST }}http-proxy.conf"
        state: absent 
    - name: creating file "{{ HTTP_PROXY_DEST }}http-proxy.conf"
      file:
        dest: "{{ HTTP_PROXY_DEST }}http-proxy.conf"
        state: touch 

    - name: edit "{{HTTP_PROXY_DEST}}http-proxy.conf"
      lineinfile:
           dest: "{{HTTP_PROXY_DEST}}http-proxy.conf"
           line: '{{ item }}'
      with_items:
        - '[Service]' 
        - 'Environment="NO_PROXY={{no_proxy}}"'
        - 'Environment="HTTP_PROXY={{http_proxy}}"'
        - 'Environment="HTTPS_PROXY={{https_proxy}}"'

    - name: remove "{{HTTP_PROXY_DEST}}remote-api.conf"
      file:
        dest: "{{HTTP_PROXY_DEST}}remote-api.conf"
        state: absent
    - name: creating "{{HTTP_PROXY_DEST}}remote-api.conf"
      file:
        dest: "{{HTTP_PROXY_DEST}}remote-api.conf"
        state: touch
    - name: edit remote-api.conf
      lineinfile:
         dest: "{{HTTP_PROXY_DEST}}remote-api.conf"
         line: '{{ item }}'
      with_items:
        - '[Service]'
        - 'ExecStart='
        - 'ExecStart=/usr/bin/dockerd -H fd:// -H tcp://{{ansible_default_ipv4.address}}:{{registry_port}}'
    - name: systemctl daemon-reload
      command: systemctl daemon-reload

    - name: systemctl restart docker
      command: systemctl restart docker
    
    - name: apt-get install -y curl
      apt:
        name: curl
        state: latest
      #command: apt-get install -y curl
    
    - name: install docker repository public key
      shell: curl -k https://apt.dockerproject.org/gpg >docke_key;apt-key add docke_key
   
    - name: install docker repository public key for kubespray
      shell: curl -k https://download.docker.com/linux/debian/gpg >docke_key;apt-key add docke_key
   
    - name: install kubectl repository public key for kubespray
      shell: curl -k https://packages.cloud.google.com/apt/doc/apt-key.gpg >docke_kubectl_key;apt-key add docke_kubectl_key

    - name: apt-get install psmisc
      apt:
        name: psmisc
        state: latest

    - name : install golang
      apt:
        name: golang
        state: latest
 #     shell: apt-get install golang -y   
