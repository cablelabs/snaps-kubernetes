###########################################################################
# Copyright 2017 ARICENT HOLDINGS LUXEMBOURG SARL. and
# Cable Television Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###########################################################################



---

- hosts: "{{ host_name }}"
  become: true
  become_user: root
  vars:
    - networking_plugin: "{{ networking_plugin }}"
  tasks:
    - name: change permissions for cni plugins
      shell: chmod 777 /opt/cni/bin/*
      when: networking_plugin == "none"

    - name: change permissions for cni plugins
      shell: chmod 777 /opt/cni/bin/multus
 
    - name: Clean artifact path
      file:
        state: absent
        path: /etc/cni/net.d/   

    - name: create the /etc/cni directory 
      file: path=/etc/cni
            mode=0755
            state=directory
      
    - name: create the /etc/cni/net.d directory 
      file: path=/etc/cni/net.d 
            mode=0755
            state=directory
 
    - name: create multus-cni.conf file
      file: path=/root/multus-cni.conf state=touch
            mode=0644
      
    - name: write data in /root/multus-cni.conf file                                                                        
      blockinfile:                                                                                              
        dest: /root/multus-cni.conf
        block: |
         {
           "name": "minion-cni-network",
           "type": "multus",
           "kubeconfig": "/etc/kubernetes/node-kubeconfig.yaml",
           "delegates": [{
                 "type": "weave-net",
                 "hairpinMode": true,
                 "masterplugin": true
           }]
         }
      when: networking_plugin == "weave"
 
    - name: write data in /root/multus-cni.conf file
      blockinfile:
        dest: /root/multus-cni.conf
        block: |
         {
           "name": "minion-cni-network",
           "type": "multus",
           "kubeconfig": "/etc/kubernetes/node-kubeconfig.yaml",
           "delegates": [{
                 "type": "flannel",
                 "masterplugin": true,
                 "delegate": {
                    "hairpinMode": true,
                    "isDefaultGateway": true
             }
           }]
         }
      when: networking_plugin == "flannel"
 
    - name: write data in /root/multus-cni.conf file
      blockinfile:
        dest: /root/multus-cni.conf
        block: |
         {
           "name": "minion-cni-network",
           "type": "multus",
           "kubeconfig": "/etc/kubernetes/node-kubeconfig.yaml"
         }
      when: "networking_plugin != \"flannel\" and networking_plugin != \"weave\"" 
    
    - name: copy multus-cni.conf in /etc/cni/net.d/ folder
      shell: cp -r /root/multus-cni.conf /etc/cni/net.d/multus-cni.conf

    - lineinfile: dest=/etc/cni/net.d/multus-cni.conf state=absent regexp="ANSIBLE MANAGED BLOCK"  
 
    - name: Update /etc/kubernetes/kubelet.env file
      blockinfile:
        dest: /etc/kubernetes/kubelet.env
        marker: "## {mark} added by ansible"
        block: |
           KUBELET_NETWORK_PLUGIN="--network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin"
      when: networking_plugin == "none" 

    - name: kubelet restart
      command: systemctl restart kubelet
      when: networking_plugin == "none"
 
    - name: Update /etc/rc.local file
      blockinfile:
        dest: /etc/rc.local
        insertbefore: 'exit*'
        marker: "## {mark} added by ansible"
        block: |
          sleep 90
          cp /etc/cni/net.d/multus-cni.conf /home/.
          rm -rf /etc/cni/net.d/*
          cp /home/multus-cni.conf /etc/cni/net.d/.

    - name: deleting created file
      file: name=/root/multus-cni.conf state=absent
      ignore_errors: true 
