- name: edit storage in task-pv-volume.yaml
  lineinfile:
       dest: "{{ PROJ_ARTIFACT_DIR }}/task-pv-volume-{{ claim_name }}.yaml"
       regexp: 'storage:'
       line: '       storage: {{ claim_storage }}'

- name: edit pv name in task-pv-volume.yaml
  lineinfile:
    dest: "{{ PROJ_ARTIFACT_DIR }}/task-pv-volume-{{ claim_name }}.yaml"
    regexp: 'name:'
    line: '  name: {{ claim_name }}'

- name: modified storage in task-pv-claim.yaml
  lineinfile:
    dest: "{{ PROJ_ARTIFACT_DIR }}/task-pv-claim-{{ claim_name }}.yaml"
    regexp: 'storage:'
    line: '       storage: {{ claim_storage }}'

- name: modified claim name in task-pv-claim.yaml
  lineinfile:
    dest: "{{ PROJ_ARTIFACT_DIR }}/task-pv-claim-{{ claim_name }}.yaml"
    regexp: 'name:'
    line: '  name: {{ claim_name }}'

- name: kubectl delete pvc
  command: kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml delete pvc "{{ claim_name }}"
  ignore_errors: true

- name: Create persistent volume
  command: kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml create -f "{{ PROJ_ARTIFACT_DIR }}/task-pv-volume-{{ claim_name }}.yaml"
  register: cat
- debug: var=cat.stdout_lines

- name: kubectl get pv
  command: kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml get pv
  register: cat
- debug: var=cat.stdout_lines


- name: Create a PVC
  command: kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml create -f "{{ PROJ_ARTIFACT_DIR }}/task-pv-claim-{{ claim_name }}.yaml"

- name: kubectl get pvc
  command: kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml get pvc
  register: cat
- debug: var=cat.stdout_lines
